[gd_scene load_steps=5 format=2]

[ext_resource path="res://assets/player.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Actor
export var stomp_impulse: = 1000.0

func _on_EnemyDetector_area_entered(area):
	_velocity = calculate_stomp_velocity(_velocity, stomp_impulse)
	
func _on_EnemyDetector_body_entered(body):
	queue_free()

func _physics_process(delta: float) -> void:
	var is_jump_interrupted: = Input.is_action_just_released(\"jump\") and _velocity.y < 0.0
	var direction: = get_direction()
	_velocity = calculate_move_velocity(_velocity, direction, speed, is_jump_interrupted)
	_velocity = move_and_slide(_velocity, FLOOR_NORMAL)

func get_direction() -> Vector2:
	return Vector2(
		Input.get_action_strength(\"move_right\") - Input.get_action_strength(\"move_left\"),
		-1.0 if Input.is_action_just_pressed(\"jump\") and is_on_floor() else 1.0
	)

func calculate_move_velocity(
		linear_velocity: Vector2,
		direction: Vector2,
		speed: Vector2,
		is_jump_interrupted: bool
	) -> Vector2:
	var out: = linear_velocity
	out.x = speed.x * direction.x
	out.y += gravity * get_physics_process_delta_time()
	#if direction x is greater than 0 it starts animationplayertest walk animation
	if direction.x > 0:
		get_node(\"AnimationPlayertest\").play(\"walk\")
	if direction.x < 0:
		get_node(\"AnimationPlayertest\").play_backwards(\"walk\")
	if direction.x == 0:
		get_node(\"AnimationPlayertest\").stop()
	if direction.y == -1.0:
		out.y = speed.y * direction.y 
	if is_jump_interrupted:
		out.y = 0.0
	return out

func calculate_stomp_velocity(linear_velocity: Vector2, impulse: float) -> Vector2:
	var out: = linear_velocity
	out.y = -impulse
	return out
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 40, 41 )

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 46, 44 )

[node name="Player" type="KinematicBody2D"]
collision_mask = 8
script = SubResource( 1 )
speed = Vector2( 800, 1400 )

[node name="player" type="Sprite" parent="."]
position = Vector2( 0, -49 )
texture = ExtResource( 1 )

[node name="Camera2D" type="Camera2D" parent="player"]
position = Vector2( 0, -134 )
current = true
limit_left = 0
limit_top = 0
limit_smoothed = true
drag_margin_h_enabled = true
drag_margin_v_enabled = true
smoothing_enabled = true
smoothing_speed = 7.0
drag_margin_left = 0.0
drag_margin_right = 0.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0, -42 )
shape = SubResource( 2 )

[node name="EnemyDetector" type="Area2D" parent="."]
modulate = Color( 0, 0.0392157, 1, 1 )
monitorable = false
collision_layer = 0
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="EnemyDetector"]
position = Vector2( 0, -42 )
shape = SubResource( 3 )
[connection signal="area_entered" from="EnemyDetector" to="." method="_on_EnemyDetector_area_entered"]
[connection signal="body_entered" from="EnemyDetector" to="." method="_on_EnemyDetector_body_entered"]
